{"version":3,"sources":["Components/AddCategory.js","Helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","Hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,mCACI,sBAAMC,SATO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAIT,EAAc,CAACE,GAAF,mBAAiBO,QAC1DN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,uBCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,qBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARtB,kBAWZM,GAXY,4CAAH,sDCaLO,EAXK,SAAC,GAAW,IAAVL,EAAS,EAATA,IAClB,OACI,mCACI,sBAAKM,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAIR,MACd,4BAAIQ,EAAIE,cCmBTM,EAtBC,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAEd,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAlBAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAM,SAAAC,GACpBC,YAAW,WACPJ,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEf,UAER,CAACnB,IASIoB,EDtBiBM,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMY,EAAb,EAAaA,QAEb,OACI,qCACI,6BAAKnB,IACJmB,GAAW,wCACZ,qBAAKH,UAAU,4BAAf,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,CAEIA,IAAKA,GADAA,EAAIC,aEZxBgB,EAAe,WACxB,MAAoCzC,mBAAS,CAAC,WAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAI,SAACT,GAAD,OAEX,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,YCb3B4B,G,MAAUC,SAASC,cAAc,UACvCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.91af3155.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=> {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => setCategories([inputValue, ...categories]));\r\n            setinputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category)=> {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=PAomstU2d7F5Rds7O70utgaoM5e4pTGo&q=${encodeURI(category)}&limit=3`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({img}) => {\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <img src={img.url}/>\r\n                <p>{img.title}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../Hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid animate__fadeIn\">\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            img={img}\r\n                        />\r\n                    )\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=> {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(()=> {\r\n        getGifs(category).then( imgs =>{\r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            },3000);\r\n        });\r\n    },[category]);\r\n\r\n    // setTimeout(()=>{\r\n    //     setstate({\r\n    //         data:[1,2,3,4,5,6,7,8,9],\r\n    //         loading: false\r\n    //     })\r\n    // },3000);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>   \r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        // return <li key={categorie}>{categorie}</li>\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './Components/GifExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\nReactDOM.render(<GifExpertApp/> ,divRoot);\n"],"sourceRoot":""}